/*
 * Copyright (C) 2013 Chen Hui <calmer91@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

def SourcePath = 'src/main/'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile "${SourcePath}AndroidManifest.xml"
            java.srcDirs = ["${SourcePath}java"]
            jniLibs.srcDirs = ["${SourcePath}libs"]
        }
        androidTest.setRoot("${SourcePath}../androidTest")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
if (rootProject.file('gradle/gradle-mvn-push.gradle').exists()) {
    apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
}
if (rootProject.file('gradle/gradle-bintray-upload.gradle').exists()) {
    apply from: rootProject.file('gradle/gradle-bintray-upload.gradle')
}
//task makeSourceJar(type: Copy, dependsOn: sourcesJar) {
//    delete 'build/libs/mg-base.jar'
//    from('build/libs/')
//    into('build/libs/')
//    include('base-sources.jar')
//    rename ('base-sources.jar', 'mg-base.jar')
//}
//task clearJar(type: Delete) {
//    delete 'build/libs/mySdk.jar'////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
//}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task makeJar(type: Copy, dependsOn: sourcesJar) {
//    from('build/intermediates/bundles/debug/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
//    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
//    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
//    rename ('classes.jar', 'danmuku.jar')
//}

//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}

task makeSourceJar(type: Copy, dependsOn: sourcesJar) {
    delete 'build/libs/mg-base.jar'
    from('build/libs/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'mg-base.jar')
}

//makeJar.dependsOn(clearJar, build)